{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../crowd/crowd.component\";\nimport * as i2 from \"../guillotine/guillotine.component\";\nimport * as i3 from \"../board/board.component\";\nimport * as i4 from \"primeng/dialog\";\nimport * as i5 from \"primeng/button\";\n\nconst _c0 = function () {\n  return {\n    width: \"30vw\",\n    height: \"50vh\"\n  };\n};\n\nexport let GameComponent = /*#__PURE__*/(() => {\n  class GameComponent {\n    constructor() {\n      // word: string[] = [];\n      this.remainingGuesses = 10;\n      this.wrongGuesses = 0;\n      this.correct = false;\n      this.lose = false;\n      this.newGame = false;\n      this.choose = true;\n      this.typeWord = false;\n      this.newWord = new FormControl('');\n      this.wordForm = new FormGroup({\n        newWord: this.newWord\n      });\n    }\n\n    ngOnInit() {}\n\n    guess(event) {\n      this.remainingGuesses = Number(event);\n    }\n\n    guessTotal(event) {\n      this.remainingGuesses = Number(event);\n    }\n\n    wrongGuess() {\n      this.remainingGuesses--;\n      this.wrongGuesses++;\n\n      if (this.remainingGuesses === 0) {\n        setTimeout(() => {\n          this.playAudio('assets/audio/cheer.wav');\n        }, 5000);\n        setTimeout(() => {\n          this.lose = true;\n        }, 10000);\n      }\n    }\n\n    correctGuess() {\n      this.correct = true;\n      this.playAudio('assets/audio/boo.mp3');\n    }\n\n    playAgain() {\n      this.correct = false;\n      this.lose = false;\n      this.choose = true;\n      this.newGame = true;\n    }\n\n    playAudio(file) {\n      let audio = new Audio();\n      audio.src = file;\n      audio.load();\n      audio.play();\n    }\n\n    chooseRandom() {}\n\n    makeUpper() {\n      if (this.newWord.value !== this.newWord.value.toUpperCase()) {\n        this.newWord.setValue(this.newWord.value.toUpperCase());\n      }\n    }\n\n    setTypeWord(bool) {\n      this.typeWord = bool;\n    }\n\n    setWord() {\n      // this.word = this.newWord.value.split('');\n      this.choose = false;\n      this.lose = false;\n      this.correct = false;\n    }\n\n  }\n\n  GameComponent.ɵfac = function GameComponent_Factory(t) {\n    return new (t || GameComponent)();\n  };\n\n  GameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameComponent,\n    selectors: [[\"app-game\"]],\n    decls: 19,\n    vars: 16,\n    consts: [[1, \"mat-container\"], [\"content\", \"\"], [2, \"display\", \"flex\", \"justify-content\", \"center\"], [3, \"remainingGuesses\", \"newGame\"], [3, \"wrongGuesses\", \"remainingGuesses\", \"newGame\", \"guess\", \"guessTotal\"], [3, \"remainingGuesses\", \"newGame\", \"wrongGuess\", \"correctGuess\"], [\"header\", \"You Win\", 1, \"proper-dialog\", 3, \"modal\", \"dismissableMask\", \"closeOnEscape\", \"responsive\", \"closable\", \"visible\", \"visibleChange\"], [2, \"display\", \"flex\", \"justify-content\", \"center\", \"flex-direction\", \"column\"], [2, \"text-align\", \"center\"], [\"label\", \"Click\", \"align\", \"center\", 3, \"click\"]],\n    template: function GameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"app-crowd\", 3);\n        i0.ɵɵelementStart(4, \"app-guillotine\", 4);\n        i0.ɵɵlistener(\"guess\", function GameComponent_Template_app_guillotine_guess_4_listener($event) {\n          return ctx.guess($event);\n        })(\"guessTotal\", function GameComponent_Template_app_guillotine_guessTotal_4_listener($event) {\n          return ctx.guessTotal($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"div\", 2)(7, \"app-board\", 5);\n        i0.ɵɵlistener(\"wrongGuess\", function GameComponent_Template_app_board_wrongGuess_7_listener() {\n          return ctx.wrongGuess();\n        })(\"correctGuess\", function GameComponent_Template_app_board_correctGuess_7_listener() {\n          return ctx.correctGuess();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"p-dialog\", 6);\n        i0.ɵɵlistener(\"visibleChange\", function GameComponent_Template_p_dialog_visibleChange_8_listener($event) {\n          return ctx.correct = $event;\n        });\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"h1\", 8);\n        i0.ɵɵtext(11, \"You saved your head....For Now\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"br\")(13, \"br\");\n        i0.ɵɵelementStart(14, \"h2\", 8);\n        i0.ɵɵtext(15, \"Play Again?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"br\")(17, \"br\");\n        i0.ɵɵelementStart(18, \"p-button\", 9);\n        i0.ɵɵlistener(\"click\", function GameComponent_Template_p_button_click_18_listener() {\n          return ctx.playAgain();\n        });\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"remainingGuesses\", ctx.remainingGuesses)(\"newGame\", ctx.newGame);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"wrongGuesses\", ctx.wrongGuesses)(\"remainingGuesses\", ctx.remainingGuesses)(\"newGame\", ctx.newGame);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"remainingGuesses\", ctx.remainingGuesses)(\"newGame\", ctx.newGame);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(15, _c0));\n        i0.ɵɵproperty(\"modal\", true)(\"dismissableMask\", true)(\"closeOnEscape\", true)(\"responsive\", true)(\"closable\", true)(\"visible\", ctx.correct);\n      }\n    },\n    directives: [i1.CrowdComponent, i2.GuillotineComponent, i3.BoardComponent, i4.Dialog, i5.Button],\n    styles: [\"p-button[_ngcontent-%COMP%]{margin:0 5px}.dialogWarn-fix[_ngcontent-%COMP%]{z-index:9999!important}.ui-dialog-titlebar-close[_ngcontent-%COMP%]{display:none}\"]\n  });\n  return GameComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}