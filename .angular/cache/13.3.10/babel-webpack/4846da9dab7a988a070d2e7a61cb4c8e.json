{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { LoseDialogComponent } from '../lose-dialog/lose-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../crowd/crowd.component\";\nimport * as i3 from \"../guillotine/guillotine.component\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../board/board.component\";\n\nfunction GameComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"app-board\", 6);\n    i0.ɵɵlistener(\"wrongGuess\", function GameComponent_div_6_Template_app_board_wrongGuess_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.wrongGuess();\n    })(\"correctGuess\", function GameComponent_div_6_Template_app_board_correctGuess_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.correctGuess();\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"remainingGuesses\", ctx_r1.remainingGuesses)(\"newGame\", ctx_r1.newGame)(\"word\", ctx_r1.word);\n  }\n}\n\nexport let GameComponent = /*#__PURE__*/(() => {\n  class GameComponent {\n    constructor(dialog) {\n      this.dialog = dialog;\n      this.word = [];\n      this.remainingGuesses = 10;\n      this.wrongGuesses = 0;\n      this.correct = false;\n      this.lose = false;\n      this.newGame = false;\n      this.choose = true;\n      this.typeWord = false;\n      this.newWord = new FormControl('');\n      this.wordForm = new FormGroup({\n        newWord: this.newWord\n      });\n    }\n\n    ngOnInit() {}\n\n    guess(event) {\n      this.remainingGuesses = Number(event);\n    }\n\n    guessTotal(event) {\n      this.remainingGuesses = Number(event);\n    }\n\n    wrongGuess() {\n      this.remainingGuesses--;\n      this.wrongGuesses++;\n\n      if (this.remainingGuesses === 0) {\n        this.playAudio('assets/audio/guillotine.mp3');\n        setTimeout(() => {\n          this.playAudio('assets/audio/cheer.wav');\n        }, 5000);\n        setTimeout(() => {\n          // this.lose = true;\n          this.dialog.open(LoseDialogComponent, {\n            width: '50vw',\n            height: '50vh'\n          });\n        }, 10000);\n      }\n    }\n\n    correctGuess() {\n      this.correct = true;\n      this.playAudio('assets/audio/boo.mp3');\n    }\n\n    playAgain() {\n      this.newWord.setValue('');\n      this.word = [];\n      this.correct = false;\n      this.lose = false;\n      this.choose = true;\n      this.newGame = true;\n    }\n\n    playAudio(file) {\n      let audio = new Audio();\n      audio.src = file;\n      audio.load();\n      audio.play();\n    }\n\n    chooseRandom() {}\n\n    makeUpper() {\n      if (this.newWord.value !== this.newWord.value.toUpperCase()) {\n        this.newWord.setValue(this.newWord.value.toUpperCase());\n      }\n    }\n\n    setTypeWord(bool) {\n      this.typeWord = bool;\n    }\n\n    setWord() {\n      this.word = this.newWord.value.split('');\n      this.choose = false;\n      this.lose = false;\n      this.correct = false;\n      this.typeWord = false;\n    }\n\n  }\n\n  GameComponent.ɵfac = function GameComponent_Factory(t) {\n    return new (t || GameComponent)(i0.ɵɵdirectiveInject(i1.MatDialog));\n  };\n\n  GameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameComponent,\n    selectors: [[\"app-game\"]],\n    decls: 7,\n    vars: 6,\n    consts: [[1, \"mat-container\"], [\"content\", \"\"], [2, \"display\", \"flex\", \"justify-content\", \"center\"], [3, \"remainingGuesses\", \"newGame\"], [3, \"wrongGuesses\", \"remainingGuesses\", \"newGame\", \"guess\", \"guessTotal\"], [\"style\", \"display: flex; justify-content: center;\", 4, \"ngIf\"], [3, \"remainingGuesses\", \"newGame\", \"word\", \"wrongGuess\", \"correctGuess\"]],\n    template: function GameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"app-crowd\", 3);\n        i0.ɵɵelementStart(4, \"app-guillotine\", 4);\n        i0.ɵɵlistener(\"guess\", function GameComponent_Template_app_guillotine_guess_4_listener($event) {\n          return ctx.guess($event);\n        })(\"guessTotal\", function GameComponent_Template_app_guillotine_guessTotal_4_listener($event) {\n          return ctx.guessTotal($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵtemplate(6, GameComponent_div_6_Template, 2, 3, \"div\", 5);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"remainingGuesses\", ctx.remainingGuesses)(\"newGame\", ctx.newGame);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"wrongGuesses\", ctx.wrongGuesses)(\"remainingGuesses\", ctx.remainingGuesses)(\"newGame\", ctx.newGame);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.word);\n      }\n    },\n    directives: [i2.CrowdComponent, i3.GuillotineComponent, i4.NgIf, i5.BoardComponent],\n    styles: [\"p-button[_ngcontent-%COMP%]{margin:0 5px}.dialogWarn-fix[_ngcontent-%COMP%]{z-index:9999!important}.ui-dialog-titlebar-close[_ngcontent-%COMP%]{display:none}\"]\n  });\n  return GameComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}