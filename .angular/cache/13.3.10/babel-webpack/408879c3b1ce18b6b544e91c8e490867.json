{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction BoardComponent_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Remaining Guesses: \", ctx_r0.remainingGuesses, \"\");\n  }\n}\n\nfunction BoardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_3_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const letter_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.guessLetter(letter_r3);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const letter_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.guessedLetters.includes(letter_r3) ? \"letter-tile chosen\" : \"letter-tile\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(letter_r3);\n  }\n}\n\nfunction BoardComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const letter_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r6.word[i_r8] !== \" \" ? \"word-letter underline\" : \"word-letter\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(letter_r7);\n  }\n}\n\nfunction BoardComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, BoardComponent_div_5_div_1_Template, 3, 2, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.guessedWord);\n  }\n}\n\nexport let BoardComponent = /*#__PURE__*/(() => {\n  class BoardComponent {\n    constructor() {\n      this.newGame = false;\n      this.word = [];\n      this.wrongGuess = new EventEmitter();\n      this.correctGuess = new EventEmitter();\n      this.letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n      this.guessedLetters = [];\n      this.guessedWord = [];\n      this.wrongGuesses = 0;\n    }\n\n    ngOnInit() {\n      this.guessedWord = this.word.map(() => ' ');\n      this.totalGuesses = this.remainingGuesses;\n    }\n\n    ngOnChanges(changes) {\n      if (changes.newGame) {\n        this.guessedLetters = [];\n        this.wrongGuesses = 0;\n        this.guessedWord = this.word.map(() => ' ');\n        this.newGame = false;\n      }\n\n      if (changes.word) {\n        this.guessedLetters = [];\n        this.wrongGuesses = 0;\n        this.guessedWord = this.word.map(() => ' ');\n      }\n    }\n\n    guessLetter(letter) {\n      if (this.guessedLetters.includes(letter)) {\n        return;\n      }\n\n      this.guessedLetters.push(letter);\n\n      if (this.word.includes(letter)) {\n        this.word.forEach((l, i) => {\n          if (l === letter) {\n            this.guessedWord[i] = letter;\n          }\n\n          ;\n        });\n      } else {\n        this.wrongGuesses++;\n        this.remainingGuesses--;\n        this.wrongGuess.emit();\n      }\n\n      let correct = true;\n      this.word.forEach((l, i) => {\n        if (l !== this.guessedWord[i]) {\n          correct = false;\n        }\n\n        if (i + 1 === this.word.length && correct) {\n          this.correctGuess.emit();\n        }\n      });\n    }\n\n  }\n\n  BoardComponent.ɵfac = function BoardComponent_Factory(t) {\n    return new (t || BoardComponent)();\n  };\n\n  BoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BoardComponent,\n    selectors: [[\"app-board\"]],\n    inputs: {\n      remainingGuesses: \"remainingGuesses\",\n      newGame: \"newGame\",\n      word: \"word\"\n    },\n    outputs: {\n      wrongGuess: \"wrongGuess\",\n      correctGuess: \"correctGuess\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 6,\n    vars: 3,\n    consts: [[1, \"score\"], [4, \"ngIf\"], [1, \"letter-box\"], [3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"word-box\", 4, \"ngIf\"], [3, \"ngClass\", \"click\"], [1, \"word-box\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"]],\n    template: function BoardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, BoardComponent_p_1_Template, 2, 1, \"p\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, BoardComponent_div_3_Template, 2, 2, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵtemplate(5, BoardComponent_div_5_Template, 2, 1, \"div\", 4);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.remainingGuesses);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.letters);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.guessedWord.length > 0);\n      }\n    },\n    directives: [i1.NgIf, i1.NgForOf, i1.NgClass],\n    styles: [\".letter-box[_ngcontent-%COMP%]{display:flex;width:30vw;flex-wrap:wrap;justify-content:space-between}.letter-tile[_ngcontent-%COMP%]{padding:10px;margin:5px;background-color:#00008b;color:#fff;border-radius:20%;cursor:pointer}.chosen[_ngcontent-%COMP%]{background-color:#73a7f5!important}.letter-tile[_ngcontent-%COMP%]:hover{background-color:#0000c8}.word-box[_ngcontent-%COMP%]{display:flex;height:50px}.word-letter[_ngcontent-%COMP%]{width:50px;height:50px;margin:5px;padding:15px;font-size:32px}.underline[_ngcontent-%COMP%]{border-bottom:1px solid black}\"]\n  });\n  return BoardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}